/*
 * qTest Manager API Version 8.6 - 10.2
 * qTest Manager API Version 8.6 - 10.2
 *
 * OpenAPI spec version: 8.6 - 10.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.qtest.api.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * DefectResource
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-14T16:24:25.829Z")
public class DefectResource {
  @SerializedName("links")
  private List<Link> links = null;

  @SerializedName("properties")
  private List<PropertyResource> properties = null;

  @SerializedName("attachments")
  private List<AttachmentResource> attachments = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("pid")
  private String pid = null;

  @SerializedName("submitted_date")
  private OffsetDateTime submittedDate = null;

  @SerializedName("last_modified_date")
  private OffsetDateTime lastModifiedDate = null;

  @SerializedName("submitter_id")
  private Long submitterId = null;

  @SerializedName("last_modified_user_id")
  private Long lastModifiedUserId = null;

  @SerializedName("web_url")
  private String webUrl = null;

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public DefectResource properties(List<PropertyResource> properties) {
    this.properties = properties;
    return this;
  }

  public DefectResource addPropertiesItem(PropertyResource propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<PropertyResource>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Properties of the Defect
   * @return properties
  **/
  @ApiModelProperty(value = "Properties of the Defect")
  public List<PropertyResource> getProperties() {
    return properties;
  }

  public void setProperties(List<PropertyResource> properties) {
    this.properties = properties;
  }

  public DefectResource attachments(List<AttachmentResource> attachments) {
    this.attachments = attachments;
    return this;
  }

  public DefectResource addAttachmentsItem(AttachmentResource attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<AttachmentResource>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Attachments of the Defect
   * @return attachments
  **/
  @ApiModelProperty(value = "Attachments of the Defect")
  public List<AttachmentResource> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentResource> attachments) {
    this.attachments = attachments;
  }

  public DefectResource id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the Defect
   * @return id
  **/
  @ApiModelProperty(example = "1", value = "ID of the Defect")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DefectResource pid(String pid) {
    this.pid = pid;
    return this;
  }

   /**
   * PID of the Defect
   * @return pid
  **/
  @ApiModelProperty(example = "DF-1", value = "PID of the Defect")
  public String getPid() {
    return pid;
  }

  public void setPid(String pid) {
    this.pid = pid;
  }

  public DefectResource submittedDate(OffsetDateTime submittedDate) {
    this.submittedDate = submittedDate;
    return this;
  }

   /**
   * The date Defect was created
   * @return submittedDate
  **/
  @ApiModelProperty(value = "The date Defect was created")
  public OffsetDateTime getSubmittedDate() {
    return submittedDate;
  }

  public void setSubmittedDate(OffsetDateTime submittedDate) {
    this.submittedDate = submittedDate;
  }

  public DefectResource lastModifiedDate(OffsetDateTime lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

   /**
   * Last modified date
   * @return lastModifiedDate
  **/
  @ApiModelProperty(value = "Last modified date")
  public OffsetDateTime getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(OffsetDateTime lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }

  public DefectResource submitterId(Long submitterId) {
    this.submitterId = submitterId;
    return this;
  }

   /**
   * ID of the User who create the Defect
   * @return submitterId
  **/
  @ApiModelProperty(example = "1", value = "ID of the User who create the Defect")
  public Long getSubmitterId() {
    return submitterId;
  }

  public void setSubmitterId(Long submitterId) {
    this.submitterId = submitterId;
  }

  public DefectResource lastModifiedUserId(Long lastModifiedUserId) {
    this.lastModifiedUserId = lastModifiedUserId;
    return this;
  }

   /**
   * Last ID of the User who updated the Defect
   * @return lastModifiedUserId
  **/
  @ApiModelProperty(example = "1", value = "Last ID of the User who updated the Defect")
  public Long getLastModifiedUserId() {
    return lastModifiedUserId;
  }

  public void setLastModifiedUserId(Long lastModifiedUserId) {
    this.lastModifiedUserId = lastModifiedUserId;
  }

   /**
   * Web url to the Defect
   * @return webUrl
  **/
  @ApiModelProperty(example = "https://apitryout.qtestnet.com/p/1/portal/project#tab=defects&object=17&id=1", value = "Web url to the Defect")
  public String getWebUrl() {
    return webUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DefectResource defectResource = (DefectResource) o;
    return Objects.equals(this.links, defectResource.links) &&
        Objects.equals(this.properties, defectResource.properties) &&
        Objects.equals(this.attachments, defectResource.attachments) &&
        Objects.equals(this.id, defectResource.id) &&
        Objects.equals(this.pid, defectResource.pid) &&
        Objects.equals(this.submittedDate, defectResource.submittedDate) &&
        Objects.equals(this.lastModifiedDate, defectResource.lastModifiedDate) &&
        Objects.equals(this.submitterId, defectResource.submitterId) &&
        Objects.equals(this.lastModifiedUserId, defectResource.lastModifiedUserId) &&
        Objects.equals(this.webUrl, defectResource.webUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, properties, attachments, id, pid, submittedDate, lastModifiedDate, submitterId, lastModifiedUserId, webUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DefectResource {\n");
    
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    submittedDate: ").append(toIndentedString(submittedDate)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    submitterId: ").append(toIndentedString(submitterId)).append("\n");
    sb.append("    lastModifiedUserId: ").append(toIndentedString(lastModifiedUserId)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

