/*
 * qTest Manager API Version 8.6 - 10.2
 * qTest Manager API Version 8.6 - 10.2
 *
 * OpenAPI spec version: 8.6 - 10.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.qtest.api.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * TestCycle
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-14T16:24:25.829Z")
public class TestCycle {
  @SerializedName("creatorId")
  private Long creatorId = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  @SerializedName("lastModifiedUserId")
  private Long lastModifiedUserId = null;

  @SerializedName("lastModifiedDate")
  private OffsetDateTime lastModifiedDate = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("pid")
  private Long pid = null;

  @SerializedName("parentTestCycleId")
  private Long parentTestCycleId = null;

  @SerializedName("objOrder")
  private Long objOrder = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("clientId")
  private Long clientId = null;

  @SerializedName("testCycleType")
  private Integer testCycleType = null;

  @SerializedName("releaseId")
  private Long releaseId = null;

  @SerializedName("buildId")
  private Long buildId = null;

  @SerializedName("projectId")
  private Long projectId = null;

  @SerializedName("deleted")
  private Boolean deleted = false;

  @SerializedName("description")
  private String description = null;

  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("subCycles")
  private List<TestCycle> subCycles = null;

  @SerializedName("toscaUniqueId")
  private String toscaUniqueId = null;

  @SerializedName("toscaNodePath")
  private String toscaNodePath = null;

  @SerializedName("toscaObjectType")
  private String toscaObjectType = null;

  @SerializedName("toscaUrl")
  private String toscaUrl = null;

  @SerializedName("toscaRootEventId")
  private String toscaRootEventId = null;

  @SerializedName("parentArtifactId")
  private Long parentArtifactId = null;

  @SerializedName("parentObjectType")
  private Long parentObjectType = null;

  @SerializedName("pidWithPrefix")
  private String pidWithPrefix = null;

  @SerializedName("artifactType")
  private Integer artifactType = null;

  @SerializedName("longId")
  private Long longId = null;

  @SerializedName("statusId")
  private Long statusId = null;

  @SerializedName("toscaKey")
  private String toscaKey = null;

  @SerializedName("objectType")
  private Long objectType = null;

  @SerializedName("createDateTimeString")
  private String createDateTimeString = null;

  public TestCycle creatorId(Long creatorId) {
    this.creatorId = creatorId;
    return this;
  }

   /**
   * Get creatorId
   * @return creatorId
  **/
  @ApiModelProperty(value = "")
  public Long getCreatorId() {
    return creatorId;
  }

  public void setCreatorId(Long creatorId) {
    this.creatorId = creatorId;
  }

  public TestCycle createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public TestCycle lastModifiedUserId(Long lastModifiedUserId) {
    this.lastModifiedUserId = lastModifiedUserId;
    return this;
  }

   /**
   * Get lastModifiedUserId
   * @return lastModifiedUserId
  **/
  @ApiModelProperty(value = "")
  public Long getLastModifiedUserId() {
    return lastModifiedUserId;
  }

  public void setLastModifiedUserId(Long lastModifiedUserId) {
    this.lastModifiedUserId = lastModifiedUserId;
  }

  public TestCycle lastModifiedDate(OffsetDateTime lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

   /**
   * Get lastModifiedDate
   * @return lastModifiedDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(OffsetDateTime lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }

  public TestCycle id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TestCycle pid(Long pid) {
    this.pid = pid;
    return this;
  }

   /**
   * Get pid
   * @return pid
  **/
  @ApiModelProperty(value = "")
  public Long getPid() {
    return pid;
  }

  public void setPid(Long pid) {
    this.pid = pid;
  }

  public TestCycle parentTestCycleId(Long parentTestCycleId) {
    this.parentTestCycleId = parentTestCycleId;
    return this;
  }

   /**
   * Get parentTestCycleId
   * @return parentTestCycleId
  **/
  @ApiModelProperty(value = "")
  public Long getParentTestCycleId() {
    return parentTestCycleId;
  }

  public void setParentTestCycleId(Long parentTestCycleId) {
    this.parentTestCycleId = parentTestCycleId;
  }

  public TestCycle objOrder(Long objOrder) {
    this.objOrder = objOrder;
    return this;
  }

   /**
   * Get objOrder
   * @return objOrder
  **/
  @ApiModelProperty(value = "")
  public Long getObjOrder() {
    return objOrder;
  }

  public void setObjOrder(Long objOrder) {
    this.objOrder = objOrder;
  }

  public TestCycle name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestCycle clientId(Long clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @ApiModelProperty(value = "")
  public Long getClientId() {
    return clientId;
  }

  public void setClientId(Long clientId) {
    this.clientId = clientId;
  }

  public TestCycle testCycleType(Integer testCycleType) {
    this.testCycleType = testCycleType;
    return this;
  }

   /**
   * Get testCycleType
   * @return testCycleType
  **/
  @ApiModelProperty(value = "")
  public Integer getTestCycleType() {
    return testCycleType;
  }

  public void setTestCycleType(Integer testCycleType) {
    this.testCycleType = testCycleType;
  }

  public TestCycle releaseId(Long releaseId) {
    this.releaseId = releaseId;
    return this;
  }

   /**
   * Get releaseId
   * @return releaseId
  **/
  @ApiModelProperty(value = "")
  public Long getReleaseId() {
    return releaseId;
  }

  public void setReleaseId(Long releaseId) {
    this.releaseId = releaseId;
  }

  public TestCycle buildId(Long buildId) {
    this.buildId = buildId;
    return this;
  }

   /**
   * Get buildId
   * @return buildId
  **/
  @ApiModelProperty(value = "")
  public Long getBuildId() {
    return buildId;
  }

  public void setBuildId(Long buildId) {
    this.buildId = buildId;
  }

  public TestCycle projectId(Long projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @ApiModelProperty(value = "")
  public Long getProjectId() {
    return projectId;
  }

  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }

  public TestCycle deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @ApiModelProperty(value = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public TestCycle description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TestCycle startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public TestCycle endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public TestCycle subCycles(List<TestCycle> subCycles) {
    this.subCycles = subCycles;
    return this;
  }

  public TestCycle addSubCyclesItem(TestCycle subCyclesItem) {
    if (this.subCycles == null) {
      this.subCycles = new ArrayList<TestCycle>();
    }
    this.subCycles.add(subCyclesItem);
    return this;
  }

   /**
   * Get subCycles
   * @return subCycles
  **/
  @ApiModelProperty(value = "")
  public List<TestCycle> getSubCycles() {
    return subCycles;
  }

  public void setSubCycles(List<TestCycle> subCycles) {
    this.subCycles = subCycles;
  }

  public TestCycle toscaUniqueId(String toscaUniqueId) {
    this.toscaUniqueId = toscaUniqueId;
    return this;
  }

   /**
   * Get toscaUniqueId
   * @return toscaUniqueId
  **/
  @ApiModelProperty(value = "")
  public String getToscaUniqueId() {
    return toscaUniqueId;
  }

  public void setToscaUniqueId(String toscaUniqueId) {
    this.toscaUniqueId = toscaUniqueId;
  }

  public TestCycle toscaNodePath(String toscaNodePath) {
    this.toscaNodePath = toscaNodePath;
    return this;
  }

   /**
   * Get toscaNodePath
   * @return toscaNodePath
  **/
  @ApiModelProperty(value = "")
  public String getToscaNodePath() {
    return toscaNodePath;
  }

  public void setToscaNodePath(String toscaNodePath) {
    this.toscaNodePath = toscaNodePath;
  }

  public TestCycle toscaObjectType(String toscaObjectType) {
    this.toscaObjectType = toscaObjectType;
    return this;
  }

   /**
   * Get toscaObjectType
   * @return toscaObjectType
  **/
  @ApiModelProperty(value = "")
  public String getToscaObjectType() {
    return toscaObjectType;
  }

  public void setToscaObjectType(String toscaObjectType) {
    this.toscaObjectType = toscaObjectType;
  }

  public TestCycle toscaUrl(String toscaUrl) {
    this.toscaUrl = toscaUrl;
    return this;
  }

   /**
   * Get toscaUrl
   * @return toscaUrl
  **/
  @ApiModelProperty(value = "")
  public String getToscaUrl() {
    return toscaUrl;
  }

  public void setToscaUrl(String toscaUrl) {
    this.toscaUrl = toscaUrl;
  }

  public TestCycle toscaRootEventId(String toscaRootEventId) {
    this.toscaRootEventId = toscaRootEventId;
    return this;
  }

   /**
   * Get toscaRootEventId
   * @return toscaRootEventId
  **/
  @ApiModelProperty(value = "")
  public String getToscaRootEventId() {
    return toscaRootEventId;
  }

  public void setToscaRootEventId(String toscaRootEventId) {
    this.toscaRootEventId = toscaRootEventId;
  }

  public TestCycle parentArtifactId(Long parentArtifactId) {
    this.parentArtifactId = parentArtifactId;
    return this;
  }

   /**
   * Get parentArtifactId
   * @return parentArtifactId
  **/
  @ApiModelProperty(value = "")
  public Long getParentArtifactId() {
    return parentArtifactId;
  }

  public void setParentArtifactId(Long parentArtifactId) {
    this.parentArtifactId = parentArtifactId;
  }

  public TestCycle parentObjectType(Long parentObjectType) {
    this.parentObjectType = parentObjectType;
    return this;
  }

   /**
   * Get parentObjectType
   * @return parentObjectType
  **/
  @ApiModelProperty(value = "")
  public Long getParentObjectType() {
    return parentObjectType;
  }

  public void setParentObjectType(Long parentObjectType) {
    this.parentObjectType = parentObjectType;
  }

  public TestCycle pidWithPrefix(String pidWithPrefix) {
    this.pidWithPrefix = pidWithPrefix;
    return this;
  }

   /**
   * Get pidWithPrefix
   * @return pidWithPrefix
  **/
  @ApiModelProperty(value = "")
  public String getPidWithPrefix() {
    return pidWithPrefix;
  }

  public void setPidWithPrefix(String pidWithPrefix) {
    this.pidWithPrefix = pidWithPrefix;
  }

  public TestCycle artifactType(Integer artifactType) {
    this.artifactType = artifactType;
    return this;
  }

   /**
   * Get artifactType
   * @return artifactType
  **/
  @ApiModelProperty(value = "")
  public Integer getArtifactType() {
    return artifactType;
  }

  public void setArtifactType(Integer artifactType) {
    this.artifactType = artifactType;
  }

  public TestCycle longId(Long longId) {
    this.longId = longId;
    return this;
  }

   /**
   * Get longId
   * @return longId
  **/
  @ApiModelProperty(value = "")
  public Long getLongId() {
    return longId;
  }

  public void setLongId(Long longId) {
    this.longId = longId;
  }

  public TestCycle statusId(Long statusId) {
    this.statusId = statusId;
    return this;
  }

   /**
   * Get statusId
   * @return statusId
  **/
  @ApiModelProperty(value = "")
  public Long getStatusId() {
    return statusId;
  }

  public void setStatusId(Long statusId) {
    this.statusId = statusId;
  }

  public TestCycle toscaKey(String toscaKey) {
    this.toscaKey = toscaKey;
    return this;
  }

   /**
   * Get toscaKey
   * @return toscaKey
  **/
  @ApiModelProperty(value = "")
  public String getToscaKey() {
    return toscaKey;
  }

  public void setToscaKey(String toscaKey) {
    this.toscaKey = toscaKey;
  }

  public TestCycle objectType(Long objectType) {
    this.objectType = objectType;
    return this;
  }

   /**
   * Get objectType
   * @return objectType
  **/
  @ApiModelProperty(value = "")
  public Long getObjectType() {
    return objectType;
  }

  public void setObjectType(Long objectType) {
    this.objectType = objectType;
  }

  public TestCycle createDateTimeString(String createDateTimeString) {
    this.createDateTimeString = createDateTimeString;
    return this;
  }

   /**
   * Get createDateTimeString
   * @return createDateTimeString
  **/
  @ApiModelProperty(value = "")
  public String getCreateDateTimeString() {
    return createDateTimeString;
  }

  public void setCreateDateTimeString(String createDateTimeString) {
    this.createDateTimeString = createDateTimeString;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestCycle testCycle = (TestCycle) o;
    return Objects.equals(this.creatorId, testCycle.creatorId) &&
        Objects.equals(this.createdDate, testCycle.createdDate) &&
        Objects.equals(this.lastModifiedUserId, testCycle.lastModifiedUserId) &&
        Objects.equals(this.lastModifiedDate, testCycle.lastModifiedDate) &&
        Objects.equals(this.id, testCycle.id) &&
        Objects.equals(this.pid, testCycle.pid) &&
        Objects.equals(this.parentTestCycleId, testCycle.parentTestCycleId) &&
        Objects.equals(this.objOrder, testCycle.objOrder) &&
        Objects.equals(this.name, testCycle.name) &&
        Objects.equals(this.clientId, testCycle.clientId) &&
        Objects.equals(this.testCycleType, testCycle.testCycleType) &&
        Objects.equals(this.releaseId, testCycle.releaseId) &&
        Objects.equals(this.buildId, testCycle.buildId) &&
        Objects.equals(this.projectId, testCycle.projectId) &&
        Objects.equals(this.deleted, testCycle.deleted) &&
        Objects.equals(this.description, testCycle.description) &&
        Objects.equals(this.startDate, testCycle.startDate) &&
        Objects.equals(this.endDate, testCycle.endDate) &&
        Objects.equals(this.subCycles, testCycle.subCycles) &&
        Objects.equals(this.toscaUniqueId, testCycle.toscaUniqueId) &&
        Objects.equals(this.toscaNodePath, testCycle.toscaNodePath) &&
        Objects.equals(this.toscaObjectType, testCycle.toscaObjectType) &&
        Objects.equals(this.toscaUrl, testCycle.toscaUrl) &&
        Objects.equals(this.toscaRootEventId, testCycle.toscaRootEventId) &&
        Objects.equals(this.parentArtifactId, testCycle.parentArtifactId) &&
        Objects.equals(this.parentObjectType, testCycle.parentObjectType) &&
        Objects.equals(this.pidWithPrefix, testCycle.pidWithPrefix) &&
        Objects.equals(this.artifactType, testCycle.artifactType) &&
        Objects.equals(this.longId, testCycle.longId) &&
        Objects.equals(this.statusId, testCycle.statusId) &&
        Objects.equals(this.toscaKey, testCycle.toscaKey) &&
        Objects.equals(this.objectType, testCycle.objectType) &&
        Objects.equals(this.createDateTimeString, testCycle.createDateTimeString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creatorId, createdDate, lastModifiedUserId, lastModifiedDate, id, pid, parentTestCycleId, objOrder, name, clientId, testCycleType, releaseId, buildId, projectId, deleted, description, startDate, endDate, subCycles, toscaUniqueId, toscaNodePath, toscaObjectType, toscaUrl, toscaRootEventId, parentArtifactId, parentObjectType, pidWithPrefix, artifactType, longId, statusId, toscaKey, objectType, createDateTimeString);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestCycle {\n");
    
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    lastModifiedUserId: ").append(toIndentedString(lastModifiedUserId)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    parentTestCycleId: ").append(toIndentedString(parentTestCycleId)).append("\n");
    sb.append("    objOrder: ").append(toIndentedString(objOrder)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    testCycleType: ").append(toIndentedString(testCycleType)).append("\n");
    sb.append("    releaseId: ").append(toIndentedString(releaseId)).append("\n");
    sb.append("    buildId: ").append(toIndentedString(buildId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    subCycles: ").append(toIndentedString(subCycles)).append("\n");
    sb.append("    toscaUniqueId: ").append(toIndentedString(toscaUniqueId)).append("\n");
    sb.append("    toscaNodePath: ").append(toIndentedString(toscaNodePath)).append("\n");
    sb.append("    toscaObjectType: ").append(toIndentedString(toscaObjectType)).append("\n");
    sb.append("    toscaUrl: ").append(toIndentedString(toscaUrl)).append("\n");
    sb.append("    toscaRootEventId: ").append(toIndentedString(toscaRootEventId)).append("\n");
    sb.append("    parentArtifactId: ").append(toIndentedString(parentArtifactId)).append("\n");
    sb.append("    parentObjectType: ").append(toIndentedString(parentObjectType)).append("\n");
    sb.append("    pidWithPrefix: ").append(toIndentedString(pidWithPrefix)).append("\n");
    sb.append("    artifactType: ").append(toIndentedString(artifactType)).append("\n");
    sb.append("    longId: ").append(toIndentedString(longId)).append("\n");
    sb.append("    statusId: ").append(toIndentedString(statusId)).append("\n");
    sb.append("    toscaKey: ").append(toIndentedString(toscaKey)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    createDateTimeString: ").append(toIndentedString(createDateTimeString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

