/*
 * qTest Manager API Version 8.6 - 10.2
 * qTest Manager API Version 8.6 - 10.2
 *
 * OpenAPI spec version: 8.6 - 10.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.qtest.api.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * ToscaTestCycleResource
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-14T16:24:25.829Z")
public class ToscaTestCycleResource {
  @SerializedName("toscaUniqueId")
  private String toscaUniqueId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("toscaObjectType")
  private String toscaObjectType = null;

  @SerializedName("toscaNodePath")
  private String toscaNodePath = null;

  @SerializedName("toscaUrl")
  private String toscaUrl = null;

  @SerializedName("getqTestUniqueId")
  private Long getqTestUniqueId = null;

  @SerializedName("testCycles")
  private List<String> testCycles = null;

  @SerializedName("testRuns")
  private List<ToscaExecutionEntryResource> testRuns = null;

  public ToscaTestCycleResource toscaUniqueId(String toscaUniqueId) {
    this.toscaUniqueId = toscaUniqueId;
    return this;
  }

   /**
   * Get toscaUniqueId
   * @return toscaUniqueId
  **/
  @ApiModelProperty(example = "b0fd1f95-b925-43d3-9c47-d66ab584f9fc", required = true, value = "")
  public String getToscaUniqueId() {
    return toscaUniqueId;
  }

  public void setToscaUniqueId(String toscaUniqueId) {
    this.toscaUniqueId = toscaUniqueId;
  }

  public ToscaTestCycleResource name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "Execution List", required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ToscaTestCycleResource description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "Sample Execution List", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ToscaTestCycleResource toscaObjectType(String toscaObjectType) {
    this.toscaObjectType = toscaObjectType;
    return this;
  }

   /**
   * Get toscaObjectType
   * @return toscaObjectType
  **/
  @ApiModelProperty(example = "ExecutionList", value = "")
  public String getToscaObjectType() {
    return toscaObjectType;
  }

  public void setToscaObjectType(String toscaObjectType) {
    this.toscaObjectType = toscaObjectType;
  }

  public ToscaTestCycleResource toscaNodePath(String toscaNodePath) {
    this.toscaNodePath = toscaNodePath;
    return this;
  }

   /**
   * Get toscaNodePath
   * @return toscaNodePath
  **/
  @ApiModelProperty(example = "/Execution/ExecutionLists/ExecutionEntry Folder/Execution List", required = true, value = "")
  public String getToscaNodePath() {
    return toscaNodePath;
  }

  public void setToscaNodePath(String toscaNodePath) {
    this.toscaNodePath = toscaNodePath;
  }

  public ToscaTestCycleResource toscaUrl(String toscaUrl) {
    this.toscaUrl = toscaUrl;
    return this;
  }

   /**
   * Get toscaUrl
   * @return toscaUrl
  **/
  @ApiModelProperty(value = "")
  public String getToscaUrl() {
    return toscaUrl;
  }

  public void setToscaUrl(String toscaUrl) {
    this.toscaUrl = toscaUrl;
  }

  public ToscaTestCycleResource getqTestUniqueId(Long getqTestUniqueId) {
    this.getqTestUniqueId = getqTestUniqueId;
    return this;
  }

   /**
   * Get getqTestUniqueId
   * @return getqTestUniqueId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getGetqTestUniqueId() {
    return getqTestUniqueId;
  }

  public void setGetqTestUniqueId(Long getqTestUniqueId) {
    this.getqTestUniqueId = getqTestUniqueId;
  }

  public ToscaTestCycleResource testCycles(List<String> testCycles) {
    this.testCycles = testCycles;
    return this;
  }

  public ToscaTestCycleResource addTestCyclesItem(String testCyclesItem) {
    if (this.testCycles == null) {
      this.testCycles = new ArrayList<String>();
    }
    this.testCycles.add(testCyclesItem);
    return this;
  }

   /**
   * Get testCycles
   * @return testCycles
  **/
  @ApiModelProperty(value = "")
  public List<String> getTestCycles() {
    return testCycles;
  }

  public void setTestCycles(List<String> testCycles) {
    this.testCycles = testCycles;
  }

  public ToscaTestCycleResource testRuns(List<ToscaExecutionEntryResource> testRuns) {
    this.testRuns = testRuns;
    return this;
  }

  public ToscaTestCycleResource addTestRunsItem(ToscaExecutionEntryResource testRunsItem) {
    if (this.testRuns == null) {
      this.testRuns = new ArrayList<ToscaExecutionEntryResource>();
    }
    this.testRuns.add(testRunsItem);
    return this;
  }

   /**
   * Get testRuns
   * @return testRuns
  **/
  @ApiModelProperty(value = "")
  public List<ToscaExecutionEntryResource> getTestRuns() {
    return testRuns;
  }

  public void setTestRuns(List<ToscaExecutionEntryResource> testRuns) {
    this.testRuns = testRuns;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToscaTestCycleResource toscaTestCycleResource = (ToscaTestCycleResource) o;
    return Objects.equals(this.toscaUniqueId, toscaTestCycleResource.toscaUniqueId) &&
        Objects.equals(this.name, toscaTestCycleResource.name) &&
        Objects.equals(this.description, toscaTestCycleResource.description) &&
        Objects.equals(this.toscaObjectType, toscaTestCycleResource.toscaObjectType) &&
        Objects.equals(this.toscaNodePath, toscaTestCycleResource.toscaNodePath) &&
        Objects.equals(this.toscaUrl, toscaTestCycleResource.toscaUrl) &&
        Objects.equals(this.getqTestUniqueId, toscaTestCycleResource.getqTestUniqueId) &&
        Objects.equals(this.testCycles, toscaTestCycleResource.testCycles) &&
        Objects.equals(this.testRuns, toscaTestCycleResource.testRuns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(toscaUniqueId, name, description, toscaObjectType, toscaNodePath, toscaUrl, getqTestUniqueId, testCycles, testRuns);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToscaTestCycleResource {\n");
    
    sb.append("    toscaUniqueId: ").append(toIndentedString(toscaUniqueId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    toscaObjectType: ").append(toIndentedString(toscaObjectType)).append("\n");
    sb.append("    toscaNodePath: ").append(toIndentedString(toscaNodePath)).append("\n");
    sb.append("    toscaUrl: ").append(toIndentedString(toscaUrl)).append("\n");
    sb.append("    getqTestUniqueId: ").append(toIndentedString(getqTestUniqueId)).append("\n");
    sb.append("    testCycles: ").append(toIndentedString(testCycles)).append("\n");
    sb.append("    testRuns: ").append(toIndentedString(testRuns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

