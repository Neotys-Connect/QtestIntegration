/*
 * qTest Manager API Version 8.6 - 10.2
 * qTest Manager API Version 8.6 - 10.2
 *
 * OpenAPI spec version: 8.6 - 10.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.qtest.api.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * IntegrationReleaseConfigurationValues
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-14T16:24:25.829Z")
public class IntegrationReleaseConfigurationValues {
  @SerializedName("unreleased")
  private Boolean unreleased = false;

  @SerializedName("released")
  private Boolean released = false;

  @SerializedName("active")
  private Boolean active = false;

  @SerializedName("future")
  private Boolean future = false;

  @SerializedName("completed")
  private Boolean completed = false;

  public IntegrationReleaseConfigurationValues unreleased(Boolean unreleased) {
    this.unreleased = unreleased;
    return this;
  }

   /**
   * Get unreleased
   * @return unreleased
  **/
  @ApiModelProperty(value = "")
  public Boolean isUnreleased() {
    return unreleased;
  }

  public void setUnreleased(Boolean unreleased) {
    this.unreleased = unreleased;
  }

  public IntegrationReleaseConfigurationValues released(Boolean released) {
    this.released = released;
    return this;
  }

   /**
   * Get released
   * @return released
  **/
  @ApiModelProperty(value = "")
  public Boolean isReleased() {
    return released;
  }

  public void setReleased(Boolean released) {
    this.released = released;
  }

  public IntegrationReleaseConfigurationValues active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public IntegrationReleaseConfigurationValues future(Boolean future) {
    this.future = future;
    return this;
  }

   /**
   * Get future
   * @return future
  **/
  @ApiModelProperty(value = "")
  public Boolean isFuture() {
    return future;
  }

  public void setFuture(Boolean future) {
    this.future = future;
  }

  public IntegrationReleaseConfigurationValues completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

   /**
   * Get completed
   * @return completed
  **/
  @ApiModelProperty(value = "")
  public Boolean isCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationReleaseConfigurationValues integrationReleaseConfigurationValues = (IntegrationReleaseConfigurationValues) o;
    return Objects.equals(this.unreleased, integrationReleaseConfigurationValues.unreleased) &&
        Objects.equals(this.released, integrationReleaseConfigurationValues.released) &&
        Objects.equals(this.active, integrationReleaseConfigurationValues.active) &&
        Objects.equals(this.future, integrationReleaseConfigurationValues.future) &&
        Objects.equals(this.completed, integrationReleaseConfigurationValues.completed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unreleased, released, active, future, completed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationReleaseConfigurationValues {\n");
    
    sb.append("    unreleased: ").append(toIndentedString(unreleased)).append("\n");
    sb.append("    released: ").append(toIndentedString(released)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    future: ").append(toIndentedString(future)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

