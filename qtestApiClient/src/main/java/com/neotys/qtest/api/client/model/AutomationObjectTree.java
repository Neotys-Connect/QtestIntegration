/*
 * qTest Manager API Version 8.6 - 10.2
 * qTest Manager API Version 8.6 - 10.2
 *
 * OpenAPI spec version: 8.6 - 10.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.qtest.api.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.List;

/**
 * AutomationObjectTree
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-14T16:24:25.829Z")
public class AutomationObjectTree {
  /**
   * Gets or Sets artifactType
   */
  @JsonAdapter(ArtifactTypeEnum.Adapter.class)
  public enum ArtifactTypeEnum {
    INVALID("INVALID"),
    
    ROOT("ROOT"),
    
    TEST_CASE("TEST_CASE"),
    
    TEST_CYCLE("TEST_CYCLE"),
    
    TEST_SUITE("TEST_SUITE"),
    
    TEST_CASE_RUN("TEST_CASE_RUN"),
    
    RELEASE("RELEASE");

    private String value;

    ArtifactTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ArtifactTypeEnum fromValue(String text) {
      for (ArtifactTypeEnum b : ArtifactTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ArtifactTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ArtifactTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ArtifactTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ArtifactTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("artifactType")
  private ArtifactTypeEnum artifactType = null;

  @SerializedName("targetReleaseId")
  private Long targetReleaseId = null;

  @SerializedName("targetBuildId")
  private Long targetBuildId = null;

  @SerializedName("parent")
  private AutomationObjectTree parent = null;

  /**
   * Gets or Sets eventType
   */
  @JsonAdapter(EventTypeEnum.Adapter.class)
  public enum EventTypeEnum {
    CREATED("CREATED"),
    
    UPDATED("UPDATED"),
    
    DELETED("DELETED");

    private String value;

    EventTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EventTypeEnum fromValue(String text) {
      for (EventTypeEnum b : EventTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EventTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EventTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EventTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EventTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("eventType")
  private EventTypeEnum eventType = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("order")
  private Integer order = null;

  @SerializedName("children")
  private List<String> children = null;

  public AutomationObjectTree artifactType(ArtifactTypeEnum artifactType) {
    this.artifactType = artifactType;
    return this;
  }

   /**
   * Get artifactType
   * @return artifactType
  **/
  @ApiModelProperty(value = "")
  public ArtifactTypeEnum getArtifactType() {
    return artifactType;
  }

  public void setArtifactType(ArtifactTypeEnum artifactType) {
    this.artifactType = artifactType;
  }

  public AutomationObjectTree targetReleaseId(Long targetReleaseId) {
    this.targetReleaseId = targetReleaseId;
    return this;
  }

   /**
   * Get targetReleaseId
   * @return targetReleaseId
  **/
  @ApiModelProperty(value = "")
  public Long getTargetReleaseId() {
    return targetReleaseId;
  }

  public void setTargetReleaseId(Long targetReleaseId) {
    this.targetReleaseId = targetReleaseId;
  }

  public AutomationObjectTree targetBuildId(Long targetBuildId) {
    this.targetBuildId = targetBuildId;
    return this;
  }

   /**
   * Get targetBuildId
   * @return targetBuildId
  **/
  @ApiModelProperty(value = "")
  public Long getTargetBuildId() {
    return targetBuildId;
  }

  public void setTargetBuildId(Long targetBuildId) {
    this.targetBuildId = targetBuildId;
  }

  public AutomationObjectTree parent(AutomationObjectTree parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @ApiModelProperty(value = "")
  public AutomationObjectTree getParent() {
    return parent;
  }

  public void setParent(AutomationObjectTree parent) {
    this.parent = parent;
  }

  public AutomationObjectTree eventType(EventTypeEnum eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @ApiModelProperty(value = "")
  public EventTypeEnum getEventType() {
    return eventType;
  }

  public void setEventType(EventTypeEnum eventType) {
    this.eventType = eventType;
  }

  public AutomationObjectTree type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "release", value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public AutomationObjectTree id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "1", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AutomationObjectTree name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "Example release name", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AutomationObjectTree order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }

   /**
   * Get children
   * @return children
  **/
  @ApiModelProperty(value = "")
  public List<String> getChildren() {
    return children;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationObjectTree automationObjectTree = (AutomationObjectTree) o;
    return Objects.equals(this.artifactType, automationObjectTree.artifactType) &&
        Objects.equals(this.targetReleaseId, automationObjectTree.targetReleaseId) &&
        Objects.equals(this.targetBuildId, automationObjectTree.targetBuildId) &&
        Objects.equals(this.parent, automationObjectTree.parent) &&
        Objects.equals(this.eventType, automationObjectTree.eventType) &&
        Objects.equals(this.type, automationObjectTree.type) &&
        Objects.equals(this.id, automationObjectTree.id) &&
        Objects.equals(this.name, automationObjectTree.name) &&
        Objects.equals(this.order, automationObjectTree.order) &&
        Objects.equals(this.children, automationObjectTree.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artifactType, targetReleaseId, targetBuildId, parent, eventType, type, id, name, order, children);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationObjectTree {\n");
    
    sb.append("    artifactType: ").append(toIndentedString(artifactType)).append("\n");
    sb.append("    targetReleaseId: ").append(toIndentedString(targetReleaseId)).append("\n");
    sb.append("    targetBuildId: ").append(toIndentedString(targetBuildId)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

