/*
 * qTest Manager API Version 8.6 - 10.2
 * qTest Manager API Version 8.6 - 10.2
 *
 * OpenAPI spec version: 8.6 - 10.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.qtest.api.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * CommentResource
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-14T16:24:25.829Z")
public class CommentResource {
  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("updated")
  private OffsetDateTime updated = null;

  @SerializedName("userId")
  private Long userId = null;

  @SerializedName("links")
  private List<Link> links = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("content")
  private String content = null;

  public CommentResource created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Created date of Comment
   * @return created
  **/
  @ApiModelProperty(value = "Created date of Comment")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public CommentResource updated(OffsetDateTime updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Last updated date of Comment
   * @return updated
  **/
  @ApiModelProperty(value = "Last updated date of Comment")
  public OffsetDateTime getUpdated() {
    return updated;
  }

  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }

  public CommentResource userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * ID of the User who create this Comment
   * @return userId
  **/
  @ApiModelProperty(example = "5202", value = "ID of the User who create this Comment")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public CommentResource id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the Comment
   * @return id
  **/
  @ApiModelProperty(example = "2602608", value = "ID of the Comment")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CommentResource content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Comment text
   * @return content
  **/
  @ApiModelProperty(example = "The comment's content", value = "Comment text")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommentResource commentResource = (CommentResource) o;
    return Objects.equals(this.created, commentResource.created) &&
        Objects.equals(this.updated, commentResource.updated) &&
        Objects.equals(this.userId, commentResource.userId) &&
        Objects.equals(this.links, commentResource.links) &&
        Objects.equals(this.id, commentResource.id) &&
        Objects.equals(this.content, commentResource.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, userId, links, id, content);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommentResource {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

