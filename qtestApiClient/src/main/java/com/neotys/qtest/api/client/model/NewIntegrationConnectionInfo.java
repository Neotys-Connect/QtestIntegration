/*
 * qTest Manager API Version 8.6 - 10.2
 * qTest Manager API Version 8.6 - 10.2
 *
 * OpenAPI spec version: 8.6 - 10.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.qtest.api.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * NewIntegrationConnectionInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-14T16:24:25.829Z")
public class NewIntegrationConnectionInfo {
  @SerializedName("connection_id")
  private Long connectionId = null;

  @SerializedName("status")
  private String status = null;

   /**
   * Get connectionId
   * @return connectionId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Long getConnectionId() {
    return connectionId;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "false", value = "")
  public String getStatus() {
    return status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewIntegrationConnectionInfo newIntegrationConnectionInfo = (NewIntegrationConnectionInfo) o;
    return Objects.equals(this.connectionId, newIntegrationConnectionInfo.connectionId) &&
        Objects.equals(this.status, newIntegrationConnectionInfo.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionId, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewIntegrationConnectionInfo {\n");
    
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

