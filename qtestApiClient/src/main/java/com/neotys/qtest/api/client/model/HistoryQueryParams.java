/*
 * qTest Manager API Version 8.6 - 10.2
 * qTest Manager API Version 8.6 - 10.2
 *
 * OpenAPI spec version: 8.6 - 10.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.qtest.api.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * HistoryQueryParams
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-14T16:24:25.829Z")
public class HistoryQueryParams {
  @SerializedName("object_type")
  private String objectType = null;

  @SerializedName("fields")
  private List<String> fields = null;

  @SerializedName("query")
  private String query = null;

  @SerializedName("object_query")
  private String objectQuery = null;

  public HistoryQueryParams objectType(String objectType) {
    this.objectType = objectType;
    return this;
  }

   /**
   * Get objectType
   * @return objectType
  **/
  @ApiModelProperty(example = "test-cases", required = true, value = "")
  public String getObjectType() {
    return objectType;
  }

  public void setObjectType(String objectType) {
    this.objectType = objectType;
  }

  public HistoryQueryParams fields(List<String> fields) {
    this.fields = fields;
    return this;
  }

  public HistoryQueryParams addFieldsItem(String fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<String>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @ApiModelProperty(value = "")
  public List<String> getFields() {
    return fields;
  }

  public void setFields(List<String> fields) {
    this.fields = fields;
  }

  public HistoryQueryParams query(String query) {
    this.query = query;
    return this;
  }

   /**
   * Specify a structured query to retrieve history of objects specified in attribute object_query above  Only these 2 criteria are supported:   created: it can be used for querying by updated date of the object.   Its values need to be in ISO Date format. Applicable operator include: &#x3D;, &lt;&gt;, &lt;&#x3D; and &gt;&#x3D;   author:it can be used for querying by Id of the users who made the update. Applicable operators include: &#x3D; and &lt;&gt;  You can use operators and and or to combine an unlimited number of criteria above
   * @return query
  **/
  @ApiModelProperty(value = "Specify a structured query to retrieve history of objects specified in attribute object_query above  Only these 2 criteria are supported:   created: it can be used for querying by updated date of the object.   Its values need to be in ISO Date format. Applicable operator include: =, <>, <= and >=   author:it can be used for querying by Id of the users who made the update. Applicable operators include: = and <>  You can use operators and and or to combine an unlimited number of criteria above")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public HistoryQueryParams objectQuery(String objectQuery) {
    this.objectQuery = objectQuery;
    return this;
  }

   /**
   * Specify a structured query to search for qTest objects. Refer to attribute query in the request body of Query Objects API
   * @return objectQuery
  **/
  @ApiModelProperty(value = "Specify a structured query to search for qTest objects. Refer to attribute query in the request body of Query Objects API")
  public String getObjectQuery() {
    return objectQuery;
  }

  public void setObjectQuery(String objectQuery) {
    this.objectQuery = objectQuery;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoryQueryParams historyQueryParams = (HistoryQueryParams) o;
    return Objects.equals(this.objectType, historyQueryParams.objectType) &&
        Objects.equals(this.fields, historyQueryParams.fields) &&
        Objects.equals(this.query, historyQueryParams.query) &&
        Objects.equals(this.objectQuery, historyQueryParams.objectQuery);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectType, fields, query, objectQuery);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoryQueryParams {\n");
    
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    objectQuery: ").append(toIndentedString(objectQuery)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

