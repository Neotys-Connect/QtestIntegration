/*
 * qTest Manager API Version 8.6 - 10.2
 * qTest Manager API Version 8.6 - 10.2
 *
 * OpenAPI spec version: 8.6 - 10.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.qtest.api.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * AutomationTestLog
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-14T16:24:25.829Z")
public class AutomationTestLog {
  @SerializedName("links")
  private List<Link> links = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("test_case_version_id")
  private Long testCaseVersionId = null;

  @SerializedName("exe_start_date")
  private OffsetDateTime exeStartDate = null;

  @SerializedName("exe_end_date")
  private OffsetDateTime exeEndDate = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("attachments")
  private List<AttachmentResource> attachments = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("planned_exe_time")
  private Long plannedExeTime = null;

  @SerializedName("actual_exe_time")
  private Long actualExeTime = null;

  @SerializedName("build_number")
  private String buildNumber = null;

  @SerializedName("build_url")
  private String buildUrl = null;

  @SerializedName("properties")
  private List<PropertyResource> properties = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("test_step_logs")
  private List<AutomationStepLog> testStepLogs = null;

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public AutomationTestLog id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AutomationTestLog testCaseVersionId(Long testCaseVersionId) {
    this.testCaseVersionId = testCaseVersionId;
    return this;
  }

   /**
   * Get testCaseVersionId
   * @return testCaseVersionId
  **/
  @ApiModelProperty(value = "")
  public Long getTestCaseVersionId() {
    return testCaseVersionId;
  }

  public void setTestCaseVersionId(Long testCaseVersionId) {
    this.testCaseVersionId = testCaseVersionId;
  }

  public AutomationTestLog exeStartDate(OffsetDateTime exeStartDate) {
    this.exeStartDate = exeStartDate;
    return this;
  }

   /**
   * Get exeStartDate
   * @return exeStartDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getExeStartDate() {
    return exeStartDate;
  }

  public void setExeStartDate(OffsetDateTime exeStartDate) {
    this.exeStartDate = exeStartDate;
  }

  public AutomationTestLog exeEndDate(OffsetDateTime exeEndDate) {
    this.exeEndDate = exeEndDate;
    return this;
  }

   /**
   * Get exeEndDate
   * @return exeEndDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getExeEndDate() {
    return exeEndDate;
  }

  public void setExeEndDate(OffsetDateTime exeEndDate) {
    this.exeEndDate = exeEndDate;
  }

  public AutomationTestLog note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public AutomationTestLog attachments(List<AttachmentResource> attachments) {
    this.attachments = attachments;
    return this;
  }

  public AutomationTestLog addAttachmentsItem(AttachmentResource attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<AttachmentResource>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<AttachmentResource> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentResource> attachments) {
    this.attachments = attachments;
  }

  public AutomationTestLog name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AutomationTestLog plannedExeTime(Long plannedExeTime) {
    this.plannedExeTime = plannedExeTime;
    return this;
  }

   /**
   * Get plannedExeTime
   * minimum: 0
   * maximum: 9999999
   * @return plannedExeTime
  **/
  @ApiModelProperty(value = "")
  public Long getPlannedExeTime() {
    return plannedExeTime;
  }

  public void setPlannedExeTime(Long plannedExeTime) {
    this.plannedExeTime = plannedExeTime;
  }

  public AutomationTestLog actualExeTime(Long actualExeTime) {
    this.actualExeTime = actualExeTime;
    return this;
  }

   /**
   * Get actualExeTime
   * @return actualExeTime
  **/
  @ApiModelProperty(value = "")
  public Long getActualExeTime() {
    return actualExeTime;
  }

  public void setActualExeTime(Long actualExeTime) {
    this.actualExeTime = actualExeTime;
  }

  public AutomationTestLog buildNumber(String buildNumber) {
    this.buildNumber = buildNumber;
    return this;
  }

   /**
   * Get buildNumber
   * @return buildNumber
  **/
  @ApiModelProperty(value = "")
  public String getBuildNumber() {
    return buildNumber;
  }

  public void setBuildNumber(String buildNumber) {
    this.buildNumber = buildNumber;
  }

  public AutomationTestLog buildUrl(String buildUrl) {
    this.buildUrl = buildUrl;
    return this;
  }

   /**
   * Get buildUrl
   * @return buildUrl
  **/
  @ApiModelProperty(value = "")
  public String getBuildUrl() {
    return buildUrl;
  }

  public void setBuildUrl(String buildUrl) {
    this.buildUrl = buildUrl;
  }

  public AutomationTestLog properties(List<PropertyResource> properties) {
    this.properties = properties;
    return this;
  }

  public AutomationTestLog addPropertiesItem(PropertyResource propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<PropertyResource>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public List<PropertyResource> getProperties() {
    return properties;
  }

  public void setProperties(List<PropertyResource> properties) {
    this.properties = properties;
  }

  public AutomationTestLog status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public AutomationTestLog testStepLogs(List<AutomationStepLog> testStepLogs) {
    this.testStepLogs = testStepLogs;
    return this;
  }

  public AutomationTestLog addTestStepLogsItem(AutomationStepLog testStepLogsItem) {
    if (this.testStepLogs == null) {
      this.testStepLogs = new ArrayList<AutomationStepLog>();
    }
    this.testStepLogs.add(testStepLogsItem);
    return this;
  }

   /**
   * Get testStepLogs
   * @return testStepLogs
  **/
  @ApiModelProperty(value = "")
  public List<AutomationStepLog> getTestStepLogs() {
    return testStepLogs;
  }

  public void setTestStepLogs(List<AutomationStepLog> testStepLogs) {
    this.testStepLogs = testStepLogs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationTestLog automationTestLog = (AutomationTestLog) o;
    return Objects.equals(this.links, automationTestLog.links) &&
        Objects.equals(this.id, automationTestLog.id) &&
        Objects.equals(this.testCaseVersionId, automationTestLog.testCaseVersionId) &&
        Objects.equals(this.exeStartDate, automationTestLog.exeStartDate) &&
        Objects.equals(this.exeEndDate, automationTestLog.exeEndDate) &&
        Objects.equals(this.note, automationTestLog.note) &&
        Objects.equals(this.attachments, automationTestLog.attachments) &&
        Objects.equals(this.name, automationTestLog.name) &&
        Objects.equals(this.plannedExeTime, automationTestLog.plannedExeTime) &&
        Objects.equals(this.actualExeTime, automationTestLog.actualExeTime) &&
        Objects.equals(this.buildNumber, automationTestLog.buildNumber) &&
        Objects.equals(this.buildUrl, automationTestLog.buildUrl) &&
        Objects.equals(this.properties, automationTestLog.properties) &&
        Objects.equals(this.status, automationTestLog.status) &&
        Objects.equals(this.testStepLogs, automationTestLog.testStepLogs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, id, testCaseVersionId, exeStartDate, exeEndDate, note, attachments, name, plannedExeTime, actualExeTime, buildNumber, buildUrl, properties, status, testStepLogs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationTestLog {\n");
    
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    testCaseVersionId: ").append(toIndentedString(testCaseVersionId)).append("\n");
    sb.append("    exeStartDate: ").append(toIndentedString(exeStartDate)).append("\n");
    sb.append("    exeEndDate: ").append(toIndentedString(exeEndDate)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    plannedExeTime: ").append(toIndentedString(plannedExeTime)).append("\n");
    sb.append("    actualExeTime: ").append(toIndentedString(actualExeTime)).append("\n");
    sb.append("    buildNumber: ").append(toIndentedString(buildNumber)).append("\n");
    sb.append("    buildUrl: ").append(toIndentedString(buildUrl)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    testStepLogs: ").append(toIndentedString(testStepLogs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

